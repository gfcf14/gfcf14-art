@page "/404"
@layout NoLayout

<PageTitle>Not Found</PageTitle>

@inject NavigationManager Navigation

@if (!fadeWhite)
{
  <div class="text-container @(slidIn ? "ready" : "")">
    <div class="code @CodeStatus">@StatusCode</div>
    <h3 class="text">The page you entered doesn't exist. Hyperdrive redirect on 200!</h3>
  </div>
}

<div class="wrapper @(fadeWhite ? "white" : "")">
  <div class="scene">
    @for (int i = 0; i < 2; i++)
    {
      <div class="wrap @(shouldAnimate ? "animate" : "")">
        <div class="wall wall-right @(shouldAnimate ? "animate" : "")"></div>
        <div class="wall wall-left @(shouldAnimate ? "animate" : "")"></div>
        <div class="wall wall-top @(shouldAnimate ? "animate" : "")"></div>
        <div class="wall wall-bottom @(shouldAnimate ? "animate" : "")"></div>
        <div class="wall wall-back @(shouldAnimate ? "animate" : "")"></div>
      </div>
    }
  </div>
</div>

@code {
  private bool slidIn = false;
  private bool startCountDown = false;
  private int StatusCode = 404;
  private bool shouldAnimate = false;
  private bool fadeWhite = false;

  private CancellationTokenSource? cancelSource;

  protected override async Task OnInitializedAsync()
  {
    cancelSource = new();

    try
    {
      await Task.Delay(500, cancelSource.Token);
      slidIn = true;
      StateHasChanged();

      await Task.Delay(2000, cancelSource.Token);
      startCountDown = true;
      StateHasChanged();

      while (StatusCode > 200)
      {
        await Task.Delay(13, cancelSource.Token); // ~12.5ms
        StatusCode--;
        StateHasChanged();
      }

      shouldAnimate = true;
      StateHasChanged();

      await Task.Delay(5000, cancelSource.Token);
      fadeWhite = true;
      StateHasChanged();

      await Task.Delay(5000, cancelSource.Token);
      Navigation.NavigateTo("/");
    }
    catch (TaskCanceledException)
    {
      // Do nothing; user navigated away early
    }
  }

  public string CodeStatus =>
      StatusCode <= 384 && StatusCode >= 324 ? "warning"
    : StatusCode < 324 && StatusCode >= 254 ? "almost"
    : StatusCode < 254 && StatusCode >= 200 ? "ready"
    : "";

  public void Dispose()
  {
    cancelSource?.Cancel();
    cancelSource?.Dispose();
  }
}
