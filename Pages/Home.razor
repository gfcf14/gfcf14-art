@page "/"

@inject ArtworkService ArtworkService
@inject LoaderService LoaderService

@if (HasError) {
  <Error Retry="FetchArtworks" />
}

@if (IsLoading)
{
  <Loader />
}
else if (!HasError)
{
  <ul class="archive-grid">
    @foreach (var artwork in Artworks)
    {
      <li>
        <a href="@GetLink(artwork.Date.ToString("yyyy-MM-dd"))" class="link-post">
          <div class="cntr-image" style="background-image: url('@artwork.Image');">
            <div class="overlay">
              <div class="overlay-text">
                <div class="date">@artwork.Date</div>
                <div class="title">@artwork.Title</div>
              </div>
            </div>
          </div>
        </a>
      </li>
    }
  </ul>
}

@code {
  private List<Artwork> Artworks = new();
  private bool IsLoading = false;
  private bool HasError = false;

  protected override async Task OnInitializedAsync()
  {
    await FetchArtworks();
  }

  private async Task FetchArtworks()
  {
    HasError = false;
    IsLoading = true;
    LoaderService.Show();

    try
    {
      Artworks = await ArtworkService.GetAllAsync();
    }
    catch (Exception ex)
    {
      Console.Error.WriteLine(ex.Message);
      HasError = true;
    }
    finally
    {
      IsLoading = false;
      LoaderService.Hide();
    }
  }

  private string GetLink(string date) => $"/{date}";
}
